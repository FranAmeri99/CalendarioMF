generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(cuid())
  email        String        @unique
  name         String
  password     String
  role         String        @default("USER")
  avatar       String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  teamId       String?
  reservations Reservation[]
  teamMembers  Team[]        @relation("TeamMembers")
  team         Team?         @relation(fields: [teamId], references: [id])

  @@map("users")
}

model Team {
  id           String        @id @default(cuid())
  name         String        @unique
  description  String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  leaderId     String?
  reservations Reservation[]
  leader       User?         @relation("TeamMembers", fields: [leaderId], references: [id])
  members      User[]

  @@map("teams")
}

model Reservation {
  id        String   @id @default(cuid())
  date      DateTime
  userId    String
  teamId    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  team      Team?    @relation(fields: [teamId], references: [id])
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([date, userId])
  @@map("reservations")
}

model SystemConfig {
  id                             String   @id @default(cuid())
  maxSpotsPerDay                 Int      @default(12)
  allowWeekendReservations       Boolean  @default(false)
  allowHolidayReservations       Boolean  @default(false)
  maxAdvanceBookingDays          Int      @default(30)
  minAdvanceBookingHours         Int      @default(2)
  autoCancelInactiveReservations Boolean  @default(true)
  inactiveReservationHours       Int      @default(24)
  createdAt                      DateTime @default(now())
  updatedAt                      DateTime @updatedAt

  @@map("system_config")
}
